name: Enviroment
on:
  push:
  workflow_dispatch:

env:
  NODE_ENV: production
  GH_SECRET: ${{ secrets.TEST_SECRET }}
  IS_REVERT: ${{ startsWith(github.ref_name, 'revert') }}

# if: ${{ !contains(github.event.commits[0].message, '[skip ci]') && !startsWith(github.event.commits[0].message, 'Revert') }}
# if: ${{ !contains(github.event.commits[0].message, '[skip ci]') }}

jobs:
  logs:
    runs-on: ubuntu-latest
    steps:
      - name:
        run: |
          echo "github.action: ${{ github.action }}"
          echo "github.action_path: ${{ github.action_path }}"
          echo "github.action_repository: ${{ github.action_repository }}"
          echo "github.actions: ${{ github.actions }}"
          echo "github.actor: ${{ github.actor }}"
          echo "github.actor_id: ${{ github.actor_id }}"
          echo "github.api_url: ${{ github.api_url }}"
          echo "github.env: ${{ github.env }}"
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.event_path: ${{ github.event_path }}"
          echo "github.graphql_url: ${{ github.graphql_url }}"
          echo "github.head_ref: ${{ github.head_ref }}"
          echo "github.job: ${{ github.job }}"
          echo "github.output: ${{ github.output }}"
          echo "github.path: ${{ github.path }}"
          echo "github.ref: ${{ github.ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "github.ref_protected: ${{ github.ref_protected }}"
          echo "github.ref_type: ${{ github.ref_type }}"
          echo "github.repository: ${{ github.repository }}"
          echo "github.repository_id: ${{ github.repository_id }}"
          echo "github.repository_owner: ${{ github.repository_owner }}"
          echo "github.repository_owner_id: ${{ github.repository_owner_id }}"
          echo "github.retention_days: ${{ github.retention_days }}"
          echo "github.run_attempt: ${{ github.run_attempt }}"
          echo "github.run_id: ${{ github.run_id }}"
          echo "github.run_number: ${{ github.run_number }}"
          echo "github.server_url: ${{ github.server_url }}"
          echo "github.sha: ${{ github.sha }}"
          echo "github.triggering_actor: ${{ github.triggering_actor }}"
          echo "github.workflow: ${{ github.workflow }}"
          echo "github.workflow_ref: ${{ github.workflow_ref }}"
          echo "github.workflow_sha: ${{ github.workflow_sha }}"
          echo "github.workspace: ${{ github.workspace }}"
          echo "runner.arch:  ${{ runner.arch }}"
          echo "runner.name:  ${{ runner.name }}"
          echo "runner.os:    ${{ runner.os }}"
          echo "runner.temp:  ${{ runner.temp }}"
          echo "runner.tool_cache: ${{ runner.tool_cache }}"

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Print Env Build
        run: |
          echo "GITHUB.EVENT.COMMITS: ${{ toJSON(github.event.commits) }}"
          echo "-----"
  test:
    runs-on: ubuntu-latest
    # if: "${{ !contains(github.event.commits[0].message, '[skip ci]') && !startsWith(github.ref_name, 'revert') }}"
    steps:
      - name: Print TEST
        run: |
          echo "!startsWith(github.ref_name, 'revert')  ${{!startsWith(github.ref_name, 'revert')}}"
          echo "startsWith(github.ref_name, 'revert')  ${{startsWith(github.ref_name, 'revert')}}"
          echo "!contains(github.event.commits[0].message, '[skip ci]')  ${{!contains(github.event.commits[0].message, '[skip ci]')}}"
          echo "env.IS_REVERT: ${{ env.IS_REVERT }}"
          echo "!env.IS_REVERT: ${{ !env.IS_REVERT }}"
      - name: Execute Blabla
        if: "${{ !env.IS_REVERT }}"
        run: |
          echo "1111111111111111111111111"
      - name: Execute Blabla 22222 !!!
        if: "${{ !env.IS_REVERT }}"
        run: |
          echo "22222222222222222222222"
  # cyTest:
  #   runs-on: ubuntu-latest
  #   if: ${{ !contains(github.event.commits[0].message, '[skip ci]') && !startsWith(github.event.commits[0].message, 'Revert') }}
  #   steps:
  #     - name: Print cyTest
  #       run: |
  #         echo "cyTest"
  # deploy:
  #   runs-on: ubuntu-latest
  #   env:
  #     NODE_ENV: production-test
  #   steps:
  #     - name: Print Env Deploy
  #       run: |
  #         # echo "{{ env.NODE_ENV }}"
  #         # echo "{{ env.GH_SECRET }}"
